{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhsto\\\\OneDrive\\\\Documents\\\\GitHub\\\\agile-team-61\\\\frontend\\\\src\\\\components\\\\checklistItems.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChecklistPage = () => {\n  _s();\n  const [checklistItems, setChecklistItems] = useState([]);\n  const [newItem, setNewItem] = useState('');\n  useEffect(() => {\n    // Function to get cookie value by name\n    const getCookie = name => {\n      const value = \"; \".concat(document.cookie);\n      const parts = value.split(\"; \".concat(name, \"=\"));\n      if (parts.length === 2) return parts.pop().split(';').shift();\n    };\n\n    // Fetch checklist items from cookies\n    const fetchChecklistFromCookies = () => {\n      const checklistCookie = getCookie('checklist');\n      if (checklistCookie) {\n        setChecklistItems(JSON.parse(checklistCookie));\n      }\n    };\n    fetchChecklistFromCookies();\n  }, []);\n  const handleAddItem = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    const newItem = e.target.item.value; // Get the new item value from the form\n\n    console.log('Attempting to add item:', newItem);\n    try {\n      const response = await fetch('http://localhost:3001/api/add-checklist-item', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          item: newItem\n        }),\n        credentials: 'include' // Include cookies in the request\n      });\n      console.log('API response status:', response.status);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('API response data:', data);\n        if (data.message === 'Item added to checklist') {\n          setChecklistItems(prevItems => [...prevItems, newItem]); // Update checklistItems state\n          console.log('Checklist updated:', [...checklistItems, newItem]);\n        } else {\n          console.error('Unexpected response message:', data);\n        }\n      } else {\n        console.error('Failed to add item:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error adding checklist item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddItem,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"item\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: checklistItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ChecklistPage, \"R9yPtKJEAPpHnCkPkm1tkP6dr7w=\");\n_c = ChecklistPage;\nexport default ChecklistPage;\nvar _c;\n$RefreshReg$(_c, \"ChecklistPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChecklistPage","_s","checklistItems","setChecklistItems","newItem","setNewItem","getCookie","name","value","concat","document","cookie","parts","split","length","pop","shift","fetchChecklistFromCookies","checklistCookie","JSON","parse","handleAddItem","e","preventDefault","target","item","console","log","response","fetch","method","headers","body","stringify","credentials","status","ok","data","json","message","prevItems","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","map","index","_c","$RefreshReg$"],"sources":["C:/Users/jhsto/OneDrive/Documents/GitHub/agile-team-61/frontend/src/components/checklistItems.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ChecklistPage = () => {\r\n  const [checklistItems, setChecklistItems] = useState([]);\r\n  const [newItem, setNewItem] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Function to get cookie value by name\r\n    const getCookie = (name) => {\r\n      const value = `; ${document.cookie}`;\r\n      const parts = value.split(`; ${name}=`);\r\n      if (parts.length === 2) return parts.pop().split(';').shift();\r\n    };\r\n\r\n    // Fetch checklist items from cookies\r\n    const fetchChecklistFromCookies = () => {\r\n      const checklistCookie = getCookie('checklist');\r\n      if (checklistCookie) {\r\n        setChecklistItems(JSON.parse(checklistCookie));\r\n      }\r\n    };\r\n\r\n    fetchChecklistFromCookies();\r\n  }, []);\r\n\r\n  const handleAddItem = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    const newItem = e.target.item.value; // Get the new item value from the form\r\n  \r\n    console.log('Attempting to add item:', newItem);\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/add-checklist-item', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ item: newItem }),\r\n        credentials: 'include' // Include cookies in the request\r\n      });\r\n  \r\n      console.log('API response status:', response.status);\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('API response data:', data);\r\n        if (data.message === 'Item added to checklist') {\r\n          setChecklistItems(prevItems => [...prevItems, newItem]); // Update checklistItems state\r\n          console.log('Checklist updated:', [...checklistItems, newItem]);\r\n        } else {\r\n          console.error('Unexpected response message:', data);\r\n        }\r\n      } else {\r\n        console.error('Failed to add item:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding checklist item:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Checklist</h1>\r\n      <form onSubmit={handleAddItem}>\r\n        <input type=\"text\" name=\"item\" required />\r\n        <button type=\"submit\">Add Item</button>\r\n    </form>\r\n      <ul>\r\n        {checklistItems.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChecklistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}